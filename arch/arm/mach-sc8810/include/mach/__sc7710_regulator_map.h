/*
 * Copyright (C) 2013 Spreadtrum Communications Inc.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 *************************************************
 * Automatically generated C header: do not edit *
 *************************************************
 */

/*
 * Regulator (0)Name, Regulator (1)Type, Power Off (2)Ctrl and (3)Bit, Power On (4)Ctrl and (5)Bit, Sleep (6)Ctrl and (7)Bit,
 * Voltage Trimming (8)Ctrl and (9)Bits, Calibration (10)Ctrl and (11)Bits,
 * Voltage (12)Default, Voltage (13)Ctrl and (14)Bits, Voltage Select (15)Count and Voltage (16)List[ ... ...]
 */

    SCI_REGU_REG(vddcore, 2, ANA_REG_GLB_LDO_PD_SET, BIT(1), ANA_REG_GLB_LDO_PD_RST, BIT(1), ANA_REG_GLB_LDO_AP_SLP_CTRL1, BIT(0),
	ANA_REG_GLB_DCDC_CORE_CTRL1, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(16)|BIT(18)|BIT(19),
	1201, ANA_REG_GLB_DCDC_CORE_CTRL0, BIT(0)|BIT(1)|BIT(2), 8, 1100, 700, 800, 900, 1000, 650, 1200, 1300);

    SCI_REGU_REG(vddarm, 2, ANA_REG_GLB_LDO_PD_SET, BIT(11), ANA_REG_GLB_LDO_PD_RST, BIT(11), ANA_REG_GLB_LDO_AP_SLP_CTRL1, BIT(1),
	ANA_REG_GLB_DCDC_ARM_CTRL1, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(17)|BIT(18)|BIT(19),
	1301, ANA_REG_GLB_DCDC_ARM_CTRL0, BIT(0)|BIT(1)|BIT(2), 8, 1100, 700, 800, 900, 1000, 650, 1200, 1300);

    SCI_REGU_REG(vddmem, 2, ANA_REG_GLB_LDO_PD_SET, BIT(12), ANA_REG_GLB_LDO_PD_RST, BIT(12), ANA_REG_GLB_LDO_AP_SLP_CTRL1, BIT(2),
	ANA_REG_GLB_DCDC_MEM_CTRL1, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(16)|BIT(17)|BIT(18)|BIT(19),
	1811, ANA_REG_GLB_DCDC_MEM_CTRL0, BIT(0)|BIT(1)|BIT(2), 8, 1800, 1250, 1350, 1300, 1500, 1400, 1200, 1900);

    SCI_REGU_REG(dcdcwpa, 2, ANA_REG_GLB_LDO_PD_CTRL1, BIT(4), ANA_REG_GLB_LDO_PD_CTRL1, BIT(5), ANA_REG_GLB_LDO_AP_SLP_CTRL1, BIT(3),
	ANA_REG_GLB_WPA_DCDC_CTRL2, BIT(0)|BIT(1)|BIT(2), 0, 0,
	0, 0, 0, 0);

    SCI_REGU_REG(avddbb, 0, ANA_REG_GLB_LDO_PD_SET, BIT(5), ANA_REG_GLB_LDO_PD_RST, BIT(5), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(10),
	ANA_REG_GLB_LDO_TRIM3, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(3)|BIT(16)|BIT(17)|BIT(20),
	3000, ANA_REG_GLB_LDO_VCTRL0, BIT(12)|BIT(13)|BIT(14)|BIT(15), 4, 3000, 3100, 2900, 2800);

    SCI_REGU_REG(avddvb, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0);

    SCI_REGU_REG(vddao, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0);

    SCI_REGU_REG(vddusb, 0, ANA_REG_GLB_LDO_PD_CTRL0, BIT(0), ANA_REG_GLB_LDO_PD_CTRL0, BIT(1), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(4),
	0, 0, ANA_REG_GLB_LDO_CAL, BIT(6)|BIT(7)|BIT(18)|BIT(20),
	3300, ANA_REG_GLB_LDO_VCTRL2, BIT(12)|BIT(13)|BIT(14)|BIT(15), 4, 3300, 3400, 3200, 3100);

    SCI_REGU_REG(vdd18, 0, ANA_REG_GLB_LDO_PD_SET, BIT(7), ANA_REG_GLB_LDO_PD_RST, BIT(7), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(12),
	ANA_REG_GLB_LDO_TRIM1, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(18)|BIT(20),
	1800, ANA_REG_GLB_LDO_VCTRL3, BIT(4)|BIT(5)|BIT(6)|BIT(7), 4, 1800, 1500, 1300, 1200);

    SCI_REGU_REG(vdd25, 0, ANA_REG_GLB_LDO_PD_SET, BIT(8), ANA_REG_GLB_LDO_PD_RST, BIT(8), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(13),
	ANA_REG_GLB_LDO_TRIM2, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(5)|BIT(6)|BIT(7)|BIT(18)|BIT(20),
	2500, ANA_REG_GLB_LDO_VCTRL3, BIT(8)|BIT(9)|BIT(10)|BIT(11), 4, 2500, 2750, 3000, 2900);

    SCI_REGU_REG(vdd28, 0, ANA_REG_GLB_LDO_PD_SET, BIT(6), ANA_REG_GLB_LDO_PD_RST, BIT(6), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(11),
	ANA_REG_GLB_LDO_TRIM2, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(4)|BIT(6)|BIT(7)|BIT(18)|BIT(20),
	2800, ANA_REG_GLB_LDO_VCTRL3, BIT(0)|BIT(1)|BIT(2)|BIT(3), 4, 2800, 3000, 2650, 1800);

    SCI_REGU_REG(vddrf0, 0, ANA_REG_GLB_LDO_PD_SET, BIT(3), ANA_REG_GLB_LDO_PD_RST, BIT(3), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(0),
	ANA_REG_GLB_LDO_TRIM3, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(0)|BIT(1)|BIT(3)|BIT(16)|BIT(17)|BIT(20),
	2850, ANA_REG_GLB_LDO_VCTRL0, BIT(4)|BIT(5)|BIT(6)|BIT(7), 4, 2850, 2950, 2750, 1800);

    SCI_REGU_REG(vddrf1, 0, ANA_REG_GLB_LDO_PD_SET, BIT(4), ANA_REG_GLB_LDO_PD_RST, BIT(4), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(1),
	ANA_REG_GLB_LDO_TRIM4, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(1)|BIT(3)|BIT(16)|BIT(17)|BIT(20),
	2850, ANA_REG_GLB_LDO_VCTRL0, BIT(8)|BIT(9)|BIT(10)|BIT(11), 4, 2850, 2950, 2500, 1800);

    SCI_REGU_REG(vddwif0, 0, ANA_REG_GLB_LDO_PD_CTRL1, BIT(0), ANA_REG_GLB_LDO_PD_CTRL1, BIT(1), ANA_REG_GLB_LDO_AP_SLP_CTRL1, BIT(4),
	ANA_REG_GLB_LDO_TRIM7, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(1)|BIT(2)|BIT(3)|BIT(16)|BIT(17)|BIT(20),
	2800, ANA_REG_GLB_LDO_VCTRL3, BIT(12)|BIT(13)|BIT(14)|BIT(15), 4, 2800, 3300, 1800, 1200);

    SCI_REGU_REG(vddwif1, 0, ANA_REG_GLB_LDO_PD_CTRL1, BIT(2), ANA_REG_GLB_LDO_PD_CTRL1, BIT(3), ANA_REG_GLB_LDO_AP_SLP_CTRL1, BIT(5),
	ANA_REG_GLB_LDO_TRIM7, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(16)|BIT(17)|BIT(20),
	2800, ANA_REG_GLB_LDO_VCTRL4, BIT(0)|BIT(1)|BIT(2)|BIT(3), 4, 2800, 3300, 1800, 1200);

    SCI_REGU_REG(vddsd0, 0, ANA_REG_GLB_LDO_PD_CTRL0, BIT(2), ANA_REG_GLB_LDO_PD_CTRL0, BIT(3), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(9),
	ANA_REG_GLB_LDO_TRIM4, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(8)|BIT(9)|BIT(10)|BIT(16)|BIT(18)|BIT(20),
	2800, ANA_REG_GLB_LDO_VCTRL1, BIT(12)|BIT(13)|BIT(14)|BIT(15), 4, 2800, 3000, 2500, 1800);

    SCI_REGU_REG(vddsim0, 0, ANA_REG_GLB_LDO_PD_CTRL0, BIT(4), ANA_REG_GLB_LDO_PD_CTRL0, BIT(5), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(2),
	ANA_REG_GLB_LDO_TRIM5, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(10)|BIT(16)|BIT(18)|BIT(20),
	1800, ANA_REG_GLB_LDO_VCTRL1, BIT(0)|BIT(1)|BIT(2)|BIT(3), 4, 1800, 2900, 3000, 3100);

    SCI_REGU_REG(vddsim1, 0, ANA_REG_GLB_LDO_PD_CTRL0, BIT(6), ANA_REG_GLB_LDO_PD_CTRL0, BIT(7), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(3),
	ANA_REG_GLB_LDO_TRIM5, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(8)|BIT(10)|BIT(16)|BIT(18)|BIT(20),
	1800, ANA_REG_GLB_LDO_VCTRL1, BIT(4)|BIT(5)|BIT(6)|BIT(7), 4, 1800, 2900, 3000, 3100);

    SCI_REGU_REG(vddsim2, 0, ANA_REG_GLB_LDO_PD_CTRL0, BIT(14), ANA_REG_GLB_LDO_PD_CTRL0, BIT(15), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(8),
	ANA_REG_GLB_LDO_TRIM6, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(9)|BIT(10)|BIT(16)|BIT(18)|BIT(20),
	1800, ANA_REG_GLB_LDO_VCTRL1, BIT(8)|BIT(9)|BIT(10)|BIT(11), 4, 1800, 2500, 2800, 3000);

    SCI_REGU_REG(vddcamd0, 0, ANA_REG_GLB_LDO_PD_CTRL0, BIT(8), ANA_REG_GLB_LDO_PD_CTRL0, BIT(9), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(5),
	ANA_REG_GLB_LDO_TRIM0, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(4)|BIT(7)|BIT(18)|BIT(20),
	1800, ANA_REG_GLB_LDO_VCTRL2, BIT(0)|BIT(1)|BIT(2)|BIT(3), 4, 1800, 2800, 2500, 1500);

    SCI_REGU_REG(vddcamd1, 0, ANA_REG_GLB_LDO_PD_CTRL0, BIT(10), ANA_REG_GLB_LDO_PD_CTRL0, BIT(11), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(6),
	ANA_REG_GLB_LDO_TRIM0, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(5)|BIT(7)|BIT(18)|BIT(20),
	1500, ANA_REG_GLB_LDO_VCTRL2, BIT(4)|BIT(5)|BIT(6)|BIT(7), 4, 1500, 1800, 1300, 1200);

    SCI_REGU_REG(vddcama, 0, ANA_REG_GLB_LDO_PD_CTRL0, BIT(12), ANA_REG_GLB_LDO_PD_CTRL0, BIT(13), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(7),
	ANA_REG_GLB_LDO_TRIM1, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(7)|BIT(18)|BIT(20),
	2800, ANA_REG_GLB_LDO_VCTRL2, BIT(8)|BIT(9)|BIT(10)|BIT(11), 4, 2800, 3000, 2500, 1800);

    SCI_REGU_REG(vddpa, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0);

    SCI_REGU_REG(vddamp, 0, ANA_REG_GLB_LDO_PD_CTRL1, BIT(6), ANA_REG_GLB_LDO_PD_CTRL1, BIT(7), ANA_REG_GLB_LDO_AP_SLP_CTRL0, BIT(14),
	ANA_REG_GLB_LDO_TRIM9, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(0)|BIT(3)|BIT(16)|BIT(17)|BIT(20),
	0, ANA_REG_GLB_LDO_VCTRL4, BIT(4)|BIT(5)|BIT(6)|BIT(7), 4, 1800, 2200, 2000, 1600);

    SCI_REGU_REG(vddmem_l, 0, ANA_REG_GLB_LDO_PD_SET, BIT(2), ANA_REG_GLB_LDO_PD_RST, BIT(2), ANA_REG_GLB_LDO_AP_SLP_CTRL1, BIT(8),
	ANA_REG_GLB_LDO_TRIM9, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(4)|BIT(5)|BIT(7)|BIT(18)|BIT(20),
	1800, 0, 0, 2, 1800, 3000);

    SCI_REGU_REG(vddemmio, 0, ANA_REG_GLB_LDO_PD_SET, BIT(10), ANA_REG_GLB_LDO_PD_RST, BIT(10), ANA_REG_GLB_LDO_AP_SLP_CTRL1, BIT(7),
	ANA_REG_GLB_LDO_TRIM8, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(0)|BIT(2)|BIT(3)|BIT(16)|BIT(17)|BIT(20),
	1800, ANA_REG_GLB_LDO_VCTRL4, BIT(12)|BIT(13)|BIT(14)|BIT(15), 4, 1800, 1500, 1300, 1200);

    SCI_REGU_REG(vddemmcore, 0, ANA_REG_GLB_LDO_PD_SET, BIT(9), ANA_REG_GLB_LDO_PD_RST, BIT(9), ANA_REG_GLB_LDO_AP_SLP_CTRL1, BIT(6),
	ANA_REG_GLB_LDO_TRIM8, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4), ANA_REG_GLB_LDO_CAL, BIT(2)|BIT(3)|BIT(16)|BIT(17)|BIT(20),
	3000, ANA_REG_GLB_LDO_VCTRL4, BIT(8)|BIT(9)|BIT(10)|BIT(11), 4, 3000, 2800, 2500, 1800);

    SCI_REGU_REG(ldo_bg, 0, ANA_REG_GLB_LDO_PD_SET, BIT(0), ANA_REG_GLB_LDO_PD_RST, BIT(0), 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0);

    SCI_REGU_REG(ldo_rtc, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0);

    SCI_REGU_REG(ldo_lpref0, 3, ANA_REG_GLB_LDO_PD_SET, BIT(13), ANA_REG_GLB_LDO_PD_RST, BIT(13), 0, 0,
	ANA_REG_GLB_LDO_TRIM6, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(19)|BIT(20),
	1800, 0, 0, 0);

    SCI_REGU_REG(ldo_lpref2, 3, ANA_REG_GLB_LDO_PD_SET, BIT(13), ANA_REG_GLB_LDO_PD_RST, BIT(13), 0, 0,
	ANA_REG_GLB_LDO_TRIM6, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(17)|BIT(19)|BIT(20),
	1800, 0, 0, 0);

    SCI_REGU_REG(ldo_lpref1, 3, ANA_REG_GLB_LDO_PD_SET, BIT(13), ANA_REG_GLB_LDO_PD_RST, BIT(13), 0, 0,
	ANA_REG_GLB_LDO_TRIM6, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), ANA_REG_GLB_LDO_CAL, BIT(16)|BIT(19)|BIT(20),
	1800, 0, 0, 0);

