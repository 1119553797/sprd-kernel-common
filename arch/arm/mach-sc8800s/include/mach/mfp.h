/*
 * arch/arm/mach-sprd/include/mach/pm.h
 *
 * Pin Map Definitions
 *
 * Copyright (C) 2010 Spreadtrum International Ltd.
 *
 * 2010-03-05: yingchun li <yingchun.li@spreadtrum.com>
 *            initial version
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 */

#ifndef __ASM_ARCH_MFP_H
#define __ASM_ARCH_MFP_H

enum {
	MFP_PIN_INVALID = -1,

	MFP_PIN_SIMCLK0 = 0,
	MFP_PIN_SIMDA0,
	MFP_PIN_SIMRST0,
	MFP_PIN_SIMCLK1,
	MFP_PIN_SIMDA1,
	MFP_PIN_SIMRST1,
	
	MFP_PIN_SD0_CLK,
	MFP_PIN_SD0_CMD,
	MFP_PIN_SD0_D0,
	MFP_PIN_SD0_D1,
	MFP_PIN_SD0_D2,
	MFP_PIN_SD0_D3,
	
	MFP_PIN_SD1_CLK,
	MFP_PIN_SD1_CMD,
	MFP_PIN_SD1_D0,
	MFP_PIN_SD1_D1,
	MFP_PIN_SD1_D2,
	MFP_PIN_SD1_D3,
	
	MFP_PIN_KEYOUT0,
	MFP_PIN_KEYOUT1,
	MFP_PIN_KEYOUT2,
	MFP_PIN_KEYOUT3,
	MFP_PIN_KEYOUT4,
	MFP_PIN_KEYOUT5,
	MFP_PIN_KEYIN0,
	MFP_PIN_KEYIN1,
	MFP_PIN_KEYIN2,
	MFP_PIN_KEYIN3,
	MFP_PIN_KEYIN4,

	MFP_PIN_XTLEN,
	MFP_PIN_MTDO,
	MFP_PIN_MTDI,
	MFP_PIN_MTCK,
	MFP_PIN_MTMS,
	MFP_PIN_MTRST,
	MFP_PIN_ARMCLK,
	MFP_PIN_U0TXD,
	MFP_PIN_U0RXD,
	MFP_PIN_SCL,
	MFP_PIN_SDA,
	MFP_PIN_U1TXD,
	MFP_PIN_U1RXD,

	MFP_PIN_RESERVE1,
	MFP_PIN_RESERVE2,

	MFP_PIN_IISDI0,
	MFP_PIN_IISDO0,
	MFP_PIN_IISCLK0,
	MFP_PIN_IISLRCK0,
	MFP_PIN_IISMCK0,

	MFP_PIN_IISDI1,
	MFP_PIN_IISDO1,
	MFP_PIN_IISCLK1,
	MFP_PIN_IISLRCK1,
	MFP_PIN_IISMCK1,

	MFP_PIN_PBINT,

	MFP_PIN_RESERVE3,
	MFP_PIN_RESERVE4,
	MFP_PIN_RESERVE5,
	MFP_PIN_RESERVE6,

	MFP_PIN_EMA0,
	MFP_PIN_EMA1,
	MFP_PIN_EMA2,
	MFP_PIN_EMA3,
	MFP_PIN_EMA4,
	MFP_PIN_EMA5,
	MFP_PIN_EMA6,
	MFP_PIN_EMA7,
	MFP_PIN_EMA8,
	MFP_PIN_EMA9,
	MFP_PIN_EMA10,
	MFP_PIN_EMA11,
	MFP_PIN_EMA12,
	MFP_PIN_EMA16,
	MFP_PIN_EMA17,
	MFP_PIN_EMA18,
	MFP_PIN_EMA19,
	MFP_PIN_EMA20,
	MFP_PIN_EMA21,
	MFP_PIN_EMA22,
	MFP_PIN_EMA23,
	MFP_PIN_EMA24,
	MFP_PIN_EMA25,
	MFP_PIN_EMA26,
	MFP_PIN_EMA27,
	MFP_PIN_EMA28,
	MFP_PIN_EMA29,
	MFP_PIN_EMA30,
	MFP_PIN_EMA31,
	MFP_PIN_EMRAS_N,
	MFP_PIN_EMCAS_N,
	MFP_PIN_EMWE_N,

	MFP_PIN_CLKDMFPEM,
	MFP_PIN_CLKDMMEM,

	MFP_PIN_EMDQM0,
	MFP_PIN_EMDQM1,
	MFP_PIN_EMDQM2,
	MFP_PIN_EMDQM3,

	MFP_PIN_EMCS_N0,
	MFP_PIN_EMCS_N1,
	MFP_PIN_EMCS_N2,
	MFP_PIN_EMCS_N3,

	MFP_PIN_EMCKE0,
	MFP_PIN_EMCKE1,
	MFP_PIN_EMBA0,
	MFP_PIN_EMBA1,

	MFP_PIN_EMDQS0,
	MFP_PIN_EMDQS1,
	MFP_PIN_EMDQS2,
	MFP_PIN_EMDQS3,

	MFP_PIN_EMD0,
	MFP_PIN_EMD1,
	MFP_PIN_EMD2,
	MFP_PIN_EMD3,
	MFP_PIN_EMD4,
	MFP_PIN_EMD5,
	MFP_PIN_EMD6,
	MFP_PIN_EMD7,
	MFP_PIN_EMD8,
	MFP_PIN_EMD9,
	MFP_PIN_EMD10,
	MFP_PIN_EMD11,
	MFP_PIN_EMD12,
	MFP_PIN_EMD13,
	MFP_PIN_EMD14,
	MFP_PIN_EMD15,

	//Nand flash and Lcm
	MFP_PIN_NFWPN,
	MFP_PIN_LCMRSTN,
	MFP_PIN_NFRB,
	MFP_PIN_LCMCD,
	MFP_PIN_NFCLE,
	MFP_PIN_NFALE,
	MFP_PIN_NFCEN,
	MFP_PIN_NFWEN,
	MFP_PIN_NFREN,
	MFP_PIN_NFD0,
	MFP_PIN_NFD1,
	MFP_PIN_NFD2,
	MFP_PIN_NFD3,
	MFP_PIN_NFD4,
	MFP_PIN_NFD5,
	MFP_PIN_NFD6,
	MFP_PIN_NFD7,
	MFP_PIN_NFD8,

	MFP_PIN_LCMCSN0,
	MFP_PIN_LCMCSN1,
	MFP_PIN_LCD_RSTN,
	MFP_PIN_LCD_EN,
	MFP_PIN_LCD_D0,
	MFP_PIN_LCD_D1,
	MFP_PIN_LCD_D2,
	MFP_PIN_LCD_D3,
	MFP_PIN_LCD_D4,
	MFP_PIN_LCD_D5,
	MFP_PIN_LCD_D6,
	MFP_PIN_LCD_D7,
	MFP_PIN_LCD_D8,
	MFP_PIN_LCD_HS,
	MFP_PIN_LCD_VS,
	MFP_PIN_CLK_LCD,

	MFP_PIN_RESERVE7,

	MFP_PIN_CCIRCK,
	MFP_PIN_CCIRHS,
	MFP_PIN_CCIRVS,
	MFP_PIN_CCIRD0,
	MFP_PIN_CCIRD1,
	MFP_PIN_CCIRD2,
	MFP_PIN_CCIRD3,
	MFP_PIN_CCIRD4,
	MFP_PIN_CCIRD5,
	MFP_PIN_CCIRD6,
	MFP_PIN_CCIRD7,
	MFP_PIN_CCIRD8,
	MFP_PIN_CCIRD9,
	MFP_PIN_CCIRRST,
	MFP_PIN_CCIRPD,

	MFP_PIN_HRESET_N,

	MFP_PIN_RFSDA0,
	MFP_PIN_RFSCK0,
	MFP_PIN_RFSEN0_0,
	MFP_PIN_RFSEN0_1,
	MFP_PIN_RFSDA1,
	MFP_PIN_RFSCK1,
	MFP_PIN_RFSEN1_0,
	MFP_PIN_RFSEN1_1,
	MFP_PIN_RFCTL0,
	MFP_PIN_RFCTL1,
	MFP_PIN_RFCTL2,
	MFP_PIN_RFCTL3,
	MFP_PIN_RFCTL4,
	MFP_PIN_RFCTL5,
	MFP_PIN_RFCTL6,
	MFP_PIN_RFCTL7,
	MFP_PIN_RFCTL8,
	MFP_PIN_RFCTL9,
	MFP_PIN_RFCTL10,
	MFP_PIN_RFCTL11,
	MFP_PIN_RFCTL12,
	MFP_PIN_RFCTL13,
	MFP_PIN_RFCTL14,
	MFP_PIN_RFCTL15,

	MFP_PIN_CCIR_SEL, //Special regiser

	MFP_PIN_SD_SEL, //Special regiser

	MFP_PIN_KEYOUT6,
	MFP_PIN_KEYOUT7,

	MFP_PIN_RESERVE8,
	MFP_PIN_RESERVE9,

	MFP_PIN_LCD_D9,
	MFP_PIN_LCD_D10,
	MFP_PIN_LCD_D11,
	MFP_PIN_LCD_D12,
	MFP_PIN_LCD_D13,
	MFP_PIN_LCD_D14,
	MFP_PIN_LCD_D15,
	MFP_PIN_LCD_D16,
	MFP_PIN_LCD_D17,

	MFP_PIN_SD1_D4,
	MFP_PIN_SD1_D5,
	MFP_PIN_SD1_D6,
	MFP_PIN_SD1_D7,
	
	/*
	.....
	*/
	MFP_PIN_MAX
};


#define MFP_PIN(x)	(((x) & 0xffff) << 16)
#define MFP_CFG_TO_PIN(x)  ((x) >> 16)

//special bit for setting, for the default value of is not same 
//with all registers
#define MFP_IO_SET	(0x1 << 15)  
#define MFP_PULL_SET (0x1 << 14)
#define MFP_DS_SET (0x1 << 13)
#define MFP_AF_SET   (0x1 << 12)
/*
pin output/input enable. 
NOTE, this is not applied to GPIO pins, GPIO pin's input/output direction have specific
	registers and specfic bits.
*/
#define MFP_IO_NONE  (0x0 << 0)
#define MFP_IO_Z		MFP_IO_NONE
#define MFP_IO_OE		(0x1	<< 0)
#define MFP_IO_IE		(0x2 << 0)
#define MFP_IO_BOTH   (0x3 << 0)
#define MFP_IO_MASK  MFP_IO_BOTH

/*
	pin weak pull up/down
*/
#define MFP_PULL_NONE	(0x0  << 2)
#define MFP_PULL_DOWN   	(0x1 << 2)
#define MFP_PULL_UP		(0x2  << 2)
#define MFP_PULL_BOTH	(0x3  << 2)
#define MFP_PULL_MASK 	MFP_PULL_BOTH
/*
	pin driver strenth 
*/

#define MFP_DS0		(0x0 << 4)
#define MFP_DS1		(0x1 << 4)
#define MFP_DS2		(0x2 << 4)
#define MFP_DS3		(0x3 << 4)
#define MFP_DS_MASK	(0x3 << 4)
/*
	pin alternate function
*/
#define MFP_AF0			(0x0 << 6)
#define MFP_AF1			(0x1 << 6)
#define MFP_AF2			(0x2 << 6)
#define MFP_AF3			(0x3 << 6)
#define MFP_AF_MASK		(0x3 << 6)
#define MFP_GPIO  MFP_AF3
#define MFP_CFG_DEFAULT		(MFP_AF0 | MFP_DS0 | MFP_PULL_NONE | MFP_IO_NONE)

#define MFP_CFG(pin, af)		\
	((MFP_AF_SET & ~MFP_AF_MASK) |\
	 (MFP_PIN(MFP_PIN_##pin) | MFP_##af))

#define MFP_CFG_DRV(pin, af, drv)	\
	(((MFP_AF_SET |MFP_DS_SET) & ~(MFP_AF_MASK | MFP_DS_MASK)) |\
	 (MFP_PIN(MFP_PIN_##pin) | MFP_##af | MFP_##drv))

#define MFP_CFG_UPDOWN(pin, af, updown)	\
	(((MFP_AF_SET | MFP_PULL_SET) & ~(MFP_AF_MASK | MFP_PULL_MASK)) |\
	 (MFP_PIN(MFP_PIN_##pin) | MFP_##af | MFP_##updown))
	 
#define MFP_CFG_IOE(pin, af, io)	\
	(((MFP_AF_SET |MFP_IO_SET) & ~(MFP_AF_MASK | MFP_IO_MASK)) |\
	 (MFP_PIN(MFP_PIN_##pin) | MFP_##af | MFP_##io))

#define MFP_CFG_X(pin, af, drv, updown, io)	\
	(((MFP_AF_SET |MFP_IO_SET | MFP_PULL_SET | MFP_DS_SET) & \
	  ~(MFP_AF_MASK | MFP_DS_MASK | MFP_PULL_MASK | MFP_IO_MASK )) |\
	 (MFP_PIN(MFP_PIN_##pin) | MFP_##af | MFP_##drv |\
	 MFP_##updown | MFP_##io))
	 
extern unsigned long mfp_to_gpio(int pin);
extern void sprd_mfp_config(unsigned long *mfp_cfgs, int num);
#endif

